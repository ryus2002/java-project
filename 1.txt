實作下面功能：
1. 會員管理：
   - 會員註冊時需要提供基本的個人資料，包括會員名稱、郵箱、密碼等。密碼需要進行加密存儲。 ok
   - 會員登錄後，系統會生成一個身份驗證令牌（例如JWT），會員在後續的操作中需要攜帶這個令牌來進行身份驗證。
   - 會員可以通過個人資料頁面修改自己的資料，例如修改郵箱、密碼等。 要驗證是否為本人修改
   - 會員可以瀏覽其他會員的個人資料頁面，比如暱稱、星座，查看其公開信息。 ok

2. 商品管理：
   - 商品信息需要包括商品名稱、描述、價格、庫存、分類等。這些信息存儲在MySQL資料庫中的商品表中。
   - 管理員需要一個管理介面來添加、編輯、刪除商品。
   - 會員可以通過分類、關鍵字搜索商品，系統需要提供相應的搜索接口。
   - 商品詳細信息需要提供一個單獨的頁面來展示，包括商品圖片、詳細描述、庫存情況等。

3. 購物車管理：
   - 每個會員都有一個購物車，購物車中包含會員選擇的商品及其數量。
   - 會員可以添加商品到購物車，系統需要提供相應的API來處理添加商品到購物車的請求。
   - 會員可以在購物車中調整商品數量，增加或減少商品數量。
   - 會員可以從購物車中刪除某個商品。

4. 訂單管理：
   - 會員在結算購物車時生成訂單，系統會根據購物車中的商品生成訂單項目。
   - 訂單信息包括訂單號、會員信息、商品清單、總價格、訂單狀態等。
   - 會員可以查看自己的訂單歷史，包括已完成和未完成的訂單。
   - 管理員可以查看所有訂單列表，管理訂單狀態，例如確認訂單、發貨、取消訂單等操作。

5. 支付管理：
   - 會員在結算訂單時可以選擇不同的支付方式，例如信用卡、支付寶、微信支付等。
   - 系統需要與相應的支付服務提供商進行接口對接，以實現支付功能。
   - 支付成功後，訂單狀態需要更新為已支付，庫存需要相應減少。

6. 技術要求：
	- 使用 JDK 21
	- 使用 Spring Boot 3以上版本的框架來實作整個系統。
	- 使用 Tomcat 運行系統。
	- 使用 MySQL 資料庫 8.0 以上版本。
	- 使用連接池來管理資料庫連接，資料庫連線密碼需進行加密不可以明碼出現在設定檔。
	- 使用 Swagger 說明 API 相關資訊。
	- 使用 Thymeleaf ，實作前端頁面。
    - 使用 Docker 安裝所有的環境
   
7. 交付內容
	- 需產出可執行的 JAR 或 WAR 及使用說明
	- 整個專案的 Workspace
	- DB Schema

8. 請加上繁體中文註解說明以方便新手容易閱讀